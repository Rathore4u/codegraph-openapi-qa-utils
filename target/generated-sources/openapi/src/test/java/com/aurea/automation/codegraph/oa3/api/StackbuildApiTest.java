/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.aurea.automation.codegraph.oa3.api;

import com.aurea.automation.codegraph.oa3.models.ErrorResponse;
import com.aurea.automation.codegraph.oa3.models.StackBuildRequest;
import com.aurea.automation.codegraph.oa3.models.StackBuildRequestDto;
import com.aurea.automation.codegraph.oa3.models.StackBuildStatus;
import com.aurea.automation.codegraph.oa3.models.StackBuildStatusUpdateDto;
import com.aurea.automation.codegraph.oa3.ApiClient;
import com.aurea.automation.codegraph.oa3.api.StackbuildApi;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.filter.log.ErrorLoggingFilter;
import org.junit.Before;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import static io.restassured.config.ObjectMapperConfig.objectMapperConfig;
import static io.restassured.config.RestAssuredConfig.config;
import static com.aurea.automation.codegraph.oa3.GsonObjectMapper.gson;

/**
 * API tests for StackbuildApi
 */
@Ignore
public class StackbuildApiTest {

    private StackbuildApi api;

    @Before
    public void createApi() {
        api = ApiClient.api(ApiClient.Config.apiConfig().reqSpecSupplier(
                () -> new RequestSpecBuilder().setConfig(config().objectMapperConfig(objectMapperConfig().defaultObjectMapper(gson())))
                        .addFilter(new ErrorLoggingFilter())
                        .setBaseUri("http://localhost"))).stackbuild();
    }

    /**
     * OK
     */
    @Test
    public void shouldSee200AfterCreateStackBuildRequestUsingPOST() {
        StackBuildRequestDto stackBuildRequestDto = null;
        api.createStackBuildRequestUsingPOST()
                .body(stackBuildRequestDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Stack Build Request is created
     */
    @Test
    public void shouldSee201AfterCreateStackBuildRequestUsingPOST() {
        StackBuildRequestDto stackBuildRequestDto = null;
        api.createStackBuildRequestUsingPOST()
                .body(stackBuildRequestDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * User not authenticated
     */
    @Test
    public void shouldSee401AfterCreateStackBuildRequestUsingPOST() {
        StackBuildRequestDto stackBuildRequestDto = null;
        api.createStackBuildRequestUsingPOST()
                .body(stackBuildRequestDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Request already exists
     */
    @Test
    public void shouldSee409AfterCreateStackBuildRequestUsingPOST() {
        StackBuildRequestDto stackBuildRequestDto = null;
        api.createStackBuildRequestUsingPOST()
                .body(stackBuildRequestDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Required fields should have values
     */
    @Test
    public void shouldSee422AfterCreateStackBuildRequestUsingPOST() {
        StackBuildRequestDto stackBuildRequestDto = null;
        api.createStackBuildRequestUsingPOST()
                .body(stackBuildRequestDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * A Stack build request
     */
    @Test
    public void shouldSee200AfterGetStackBuildStatus() {
        String id = null;
        api.getStackBuildStatus()
                .idPath(id).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * User not authenticated
     */
    @Test
    public void shouldSee401AfterGetStackBuildStatus() {
        String id = null;
        api.getStackBuildStatus()
                .idPath(id).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * A Stack build request with specified id does not exist
     */
    @Test
    public void shouldSee404AfterGetStackBuildStatus() {
        String id = null;
        api.getStackBuildStatus()
                .idPath(id).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * A StackBuildStatus
     */
    @Test
    public void shouldSee200AfterGetStackBuildStatus1() {
        String id = null;
        api.getStackBuildStatus1()
                .idPath(id).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * User not authenticated
     */
    @Test
    public void shouldSee401AfterGetStackBuildStatus1() {
        String id = null;
        api.getStackBuildStatus1()
                .idPath(id).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * A Stack build request with specified id does not exist
     */
    @Test
    public void shouldSee404AfterGetStackBuildStatus1() {
        String id = null;
        api.getStackBuildStatus1()
                .idPath(id).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterSaveStackAndLayerUpdatesUsingPOST() {
        String id = null;
        StackBuildStatusUpdateDto stackBuildStatusUpdateDto = null;
        api.saveStackAndLayerUpdatesUsingPOST()
                .idPath(id)
                .body(stackBuildStatusUpdateDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Stack Build Request is created
     */
    @Test
    public void shouldSee201AfterSaveStackAndLayerUpdatesUsingPOST() {
        String id = null;
        StackBuildStatusUpdateDto stackBuildStatusUpdateDto = null;
        api.saveStackAndLayerUpdatesUsingPOST()
                .idPath(id)
                .body(stackBuildStatusUpdateDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * User not authenticated
     */
    @Test
    public void shouldSee401AfterSaveStackAndLayerUpdatesUsingPOST() {
        String id = null;
        StackBuildStatusUpdateDto stackBuildStatusUpdateDto = null;
        api.saveStackAndLayerUpdatesUsingPOST()
                .idPath(id)
                .body(stackBuildStatusUpdateDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Required fields should have values
     */
    @Test
    public void shouldSee422AfterSaveStackAndLayerUpdatesUsingPOST() {
        String id = null;
        StackBuildStatusUpdateDto stackBuildStatusUpdateDto = null;
        api.saveStackAndLayerUpdatesUsingPOST()
                .idPath(id)
                .body(stackBuildStatusUpdateDto).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

}