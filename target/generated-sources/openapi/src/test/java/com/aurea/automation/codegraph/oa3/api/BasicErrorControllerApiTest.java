/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.aurea.automation.codegraph.oa3.api;

import com.aurea.automation.codegraph.oa3.models.ModelAndView;
import com.aurea.automation.codegraph.oa3.ApiClient;
import com.aurea.automation.codegraph.oa3.api.BasicErrorControllerApi;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.filter.log.ErrorLoggingFilter;
import org.junit.Before;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import static io.restassured.config.ObjectMapperConfig.objectMapperConfig;
import static io.restassured.config.RestAssuredConfig.config;
import static com.aurea.automation.codegraph.oa3.GsonObjectMapper.gson;

/**
 * API tests for BasicErrorControllerApi
 */
@Ignore
public class BasicErrorControllerApiTest {

    private BasicErrorControllerApi api;

    @Before
    public void createApi() {
        api = ApiClient.api(ApiClient.Config.apiConfig().reqSpecSupplier(
                () -> new RequestSpecBuilder().setConfig(config().objectMapperConfig(objectMapperConfig().defaultObjectMapper(gson())))
                        .addFilter(new ErrorLoggingFilter())
                        .setBaseUri("http://localhost"))).basicErrorController();
    }

    /**
     * OK
     */
    @Test
    public void shouldSee200AfterErrorHtmlUsingDELETE() {
        api.errorHtmlUsingDELETE().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterErrorHtmlUsingGET() {
        api.errorHtmlUsingGET().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterErrorHtmlUsingHEAD() {
        api.errorHtmlUsingHEAD().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterErrorHtmlUsingOPTIONS() {
        api.errorHtmlUsingOPTIONS().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterErrorHtmlUsingPATCH() {
        api.errorHtmlUsingPATCH().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterErrorHtmlUsingPOST() {
        api.errorHtmlUsingPOST().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterErrorHtmlUsingPUT() {
        api.errorHtmlUsingPUT().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

}