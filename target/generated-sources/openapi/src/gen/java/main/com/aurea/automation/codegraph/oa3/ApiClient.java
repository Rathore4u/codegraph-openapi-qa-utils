/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.aurea.automation.codegraph.oa3;

import com.aurea.automation.codegraph.oa3.api.*;

import io.restassured.builder.RequestSpecBuilder;
import java.util.function.Consumer;
import java.util.function.Supplier;

import static io.restassured.config.ObjectMapperConfig.objectMapperConfig;
import static io.restassured.config.RestAssuredConfig.config;
import static com.aurea.automation.codegraph.oa3.GsonObjectMapper.gson;

public class ApiClient {
    public static final String BASE_URI = "http://localhost";

    private final Config config;

    private ApiClient(Config config) {
        this.config = config;
    }

    public static ApiClient api(Config config) {
        return new ApiClient(config);
    }

    public BasicErrorControllerApi basicErrorController() {
        return BasicErrorControllerApi.basicErrorController(config.baseReqSpec.get());
    }
    public LayerdefinitionApi layerdefinition() {
        return LayerdefinitionApi.layerdefinition(config.baseReqSpec.get());
    }
    public OperationHandlerApi operationHandler() {
        return OperationHandlerApi.operationHandler(config.baseReqSpec.get());
    }
    public StackApi stack() {
        return StackApi.stack(config.baseReqSpec.get());
    }
    public StackbuildApi stackbuild() {
        return StackbuildApi.stackbuild(config.baseReqSpec.get());
    }
    public TestAuthApi testAuth() {
        return TestAuthApi.testAuth(config.baseReqSpec.get());
    }
    public WebMvcEndpointHandlerMappingApi webMvcEndpointHandlerMapping() {
        return WebMvcEndpointHandlerMappingApi.webMvcEndpointHandlerMapping(config.baseReqSpec.get());
    }
    public WebhookApi webhook() {
        return WebhookApi.webhook(config.baseReqSpec.get());
    }

    public static class Config {
        private Supplier<RequestSpecBuilder> baseReqSpec = () -> new RequestSpecBuilder()
                .setBaseUri(BASE_URI)
                .setConfig(config().objectMapperConfig(objectMapperConfig().defaultObjectMapper(gson())));

        /**
         * Use common specification for all operations
         * @param supplier supplier
         * @return configuration
         */
        public Config reqSpecSupplier(Supplier<RequestSpecBuilder> supplier) {
            this.baseReqSpec = supplier;
            return this;
        }

        public static Config apiConfig() {
            return new Config();
        }
    }
}